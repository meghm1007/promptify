{"version":3,"sources":["../src/utils/messaging-helpers.ts","../src/utils/storage-helpers.ts","../src/utils/identity-helpers.ts","../src/logger/logger.ts","../src/constants.ts","../src/content-script/queue-crawl.ts","../src/utils/dnr-helpers.ts","../src/utils/utils.ts","../src/utils/iframe-helpers.ts","../src/utils/triggers-download-helpers.ts","../src/content-script/execute-crawl.ts","../src/content-script/reset-crawl.ts","../src/content-script/shared-memory.ts","../src/content-script/test-csp.ts","../src/utils/document-body-observer.ts","../src/utils/start-stop-helpers.ts","../src/content-script/websocket.ts","../src/utils/listener-helpers.ts","../src/iframe/evaluate-selector.ts","../src/iframe/check-pdf.ts","../src/iframe/dom-processing.ts","../src/iframe/message-background.ts","../src/iframe/save-crawl.ts","../src/turndown/turndown.ts","../src/pdf/pdf-getter.ts","../src/iframe/init-crawl.ts","../src/iframe/mute-iframe.ts","../src/iframe/safe-render.ts","../src/iframe/mutation-observer.ts","../src/index.ts","../src/background-script/tab-remove-listeners.ts","../src/background-script/purge-on-startup.ts","../src/content-script/storage-change-listeners.ts","../src/utils/opt-in-out-helpers.ts"],"sourcesContent":["export async function sendMessageToContentScript(\n  tabId: number,\n  message: any,\n): Promise<any> {\n  return new Promise((resolve) => {\n    message.target = \"contentScriptMellowtel\";\n    chrome.tabs.sendMessage(tabId, message, function (response) {\n      resolve(response);\n    });\n  });\n}\n\nexport async function sendMessageToBackground(message: any): Promise<any> {\n  return new Promise((resolve) => {\n    chrome.runtime.sendMessage(message, (response) => {\n      resolve(response);\n    });\n  });\n}\n","import { sendMessageToBackground } from \"./messaging-helpers\";\n\nexport function getLocalStorage(key: string): Promise<any> {\n  return new Promise((resolve) => {\n    shouldDelegateStorage().then((delegate) => {\n      if (delegate) {\n        sendMessageToBackground({ intent: \"getLocalStorage\", key: key }).then(\n          (response) => {\n            resolve(response);\n          },\n        );\n      } else {\n        chrome.storage.local.get(key, function (result) {\n          resolve(result);\n        });\n      }\n    });\n  });\n}\n\nexport function setLocalStorage(key: string, value: any): Promise<boolean> {\n  return new Promise((resolve) => {\n    shouldDelegateStorage().then((delegate) => {\n      if (delegate) {\n        sendMessageToBackground({\n          intent: \"setLocalStorage\",\n          key: key,\n          value: value,\n        }).then((response) => {\n          resolve(response);\n        });\n      } else {\n        chrome.storage.local.set({ [key]: value }, function () {\n          resolve(true);\n        });\n      }\n    });\n  });\n}\n\nexport function deleteLocalStorage(keys: string[]): Promise<boolean> {\n  return new Promise((resolve) => {\n    shouldDelegateStorage().then((delegate) => {\n      if (delegate) {\n        sendMessageToBackground({\n          intent: \"deleteLocalStorage\",\n          keys: JSON.stringify(keys),\n        }).then((response) => {\n          resolve(response);\n        });\n      } else {\n        chrome.storage.local.remove(keys, function () {\n          resolve(true);\n        });\n      }\n    });\n  });\n}\n\nexport function shouldDelegateStorage(): Promise<boolean> {\n  return new Promise((resolve) => {\n    try {\n      chrome.storage.local.get(null, () => {\n        if (chrome.runtime.lastError) {\n          resolve(true);\n        } else {\n          resolve(false);\n        }\n      });\n    } catch (error) {\n      resolve(true);\n    }\n  });\n}\n","import { getLocalStorage, setLocalStorage } from \"./storage-helpers\";\n\nexport async function getOrGenerateIdentifier(\n  configuration_key: string,\n): Promise<string> {\n  return new Promise((resolve) => {\n    getLocalStorage(\"mllwtl_identifier\").then((result) => {\n      if (\n        result.mllwtl_identifier &&\n        result.mllwtl_identifier.startsWith(`mllwtl_${configuration_key}`)\n      ) {\n        resolve(result.mllwtl_identifier);\n      } else if (\n        result.mllwtl_identifier &&\n        result.mllwtl_identifier.startsWith(`mllwtl_`)\n      ) {\n        generateIdentifier(\n          configuration_key,\n          true,\n          result.mllwtl_identifier,\n        ).then((identifier) => {\n          resolve(identifier);\n        });\n      } else {\n        generateIdentifier(configuration_key).then((identifier) => {\n          resolve(identifier);\n        });\n      }\n    });\n  });\n}\n\nexport async function generateIdentifier(\n  configuration_key: string,\n  just_update_key: boolean = false,\n  previous_identifier: string = \"\",\n): Promise<string> {\n  return new Promise((resolve) => {\n    const random_string: string = just_update_key\n      ? previous_identifier.split(\"_\")[1]\n      : generateRandomString(10);\n    const identifier: string = `mllwtl_${configuration_key}_${random_string}`;\n    setLocalStorage(\"mllwtl_identifier\", identifier).then((result) => {\n      resolve(identifier);\n    });\n  });\n}\n\nfunction generateRandomString(length: number): string {\n  return Math.random()\n    .toString(36)\n    .substring(2, length + 2);\n}\n\nexport function getIdentifier(): Promise<string> {\n  return new Promise((resolve) => {\n    getLocalStorage(\"mllwtl_identifier\").then((result) => {\n      if (result.mllwtl_identifier) {\n        resolve(result.mllwtl_identifier);\n      } else {\n        setTimeout(() => {\n          getIdentifier().then((identifier) => {\n            resolve(identifier);\n          });\n        }, 200);\n      }\n    });\n  });\n}\n","export class Logger {\n  static disableLogs: boolean = true;\n\n  static info(message: any, ...optionalParams: any[]) {\n    if (!this.disableLogs) {\n      console.info(message, ...optionalParams);\n    }\n  }\n\n  static log(message: any, ...optionalParams: any[]) {\n    if (!this.disableLogs) {\n      console.log(message, ...optionalParams);\n    }\n  }\n\n  static warn(message: any, ...optionalParams: any[]) {\n    if (!this.disableLogs) {\n      console.warn(message, ...optionalParams);\n    }\n  }\n\n  static error(message: any, ...optionalParams: any[]) {\n    if (!this.disableLogs) {\n      console.error(message, ...optionalParams);\n    }\n  }\n}\n","export const MELLOWTEL_VERSION: string = \"1.1.6\";\nexport const MAX_PARALLEL_EXECUTIONS: number = 4;\nexport const MAX_QUEUE_SIZE: number = 12;\nexport const LIFESPAN_IFRAME: number = 1000 * 60 * 1.5; // 1.5 minutes\nexport const DATA_ID_IFRAME: string = \"data-mllwtl-frame-crwl-ml\";\nexport const RULE_ID_XFRAME: number = 80045;\nexport const RULE_ID_CONTENT_DISPOSITION: number = 80046;\nexport const RULE_ID_CONTENT_TYPE: number = 80047;\nexport const RULE_ID_VALUE_TO_MODIFY_CONTENT_TYPE_TO: number = 80048;\nexport const MAX_HOURLY_RATE: number = 64;\n","import { getLocalStorage, setLocalStorage } from \"../utils/storage-helpers\";\nimport { Logger } from \"../logger/logger\";\nimport { MAX_QUEUE_SIZE } from \"../constants\";\n\nexport async function insertInQueue(dataPacket: any) {\n  return new Promise((resolve) => {\n    getLocalStorage(\"queue\").then((result) => {\n      if (result === undefined || !result.hasOwnProperty(\"queue\"))\n        result = { queue: [] };\n      let queue = result.queue;\n      if (queue.length > MAX_QUEUE_SIZE) {\n        // ignore this packet\n        Logger.log(\"[🌐] : queue is full. Ignoring this packet\");\n        resolve(false);\n      } else {\n        queue.push(dataPacket);\n        setLocalStorage(\"queue\", queue).then(() => {\n          resolve(true);\n        });\n      }\n    });\n  });\n}\n\n// Get last from queue (by shifting. Not optimized, but it's kind of ok because n is small)\nexport async function getLastFromQueue(): Promise<{\n  url: string;\n  recordID: string;\n  eventData: any;\n  waitForElement: string;\n  shouldSandbox: boolean;\n  sandBoxAttributes: string;\n}> {\n  return new Promise((resolve) => {\n    getLocalStorage(\"queue\").then((result) => {\n      if (result === undefined || !result.hasOwnProperty(\"queue\"))\n        result = { queue: [] };\n      let queue = result.queue;\n      if (queue.length === 0)\n        return resolve({\n          url: \"\",\n          recordID: \"0123\",\n          eventData: {},\n          waitForElement: \"none\",\n          shouldSandbox: false,\n          sandBoxAttributes: \"\",\n        });\n      let last = queue.shift();\n      setLocalStorage(\"queue\", queue).then(() => {\n        resolve(last);\n      });\n    });\n  });\n}\n","import HeaderOperation = chrome.declarativeNetRequest.HeaderOperation;\nimport RuleActionType = chrome.declarativeNetRequest.RuleActionType;\nimport ResourceType = chrome.declarativeNetRequest.ResourceType;\nimport { sendMessageToBackground } from \"./messaging-helpers\";\nimport { RULE_ID_XFRAME } from \"../constants\";\n\nexport function disableXFrameHeaders(\n  hostname: string,\n  skipHeaders: boolean,\n): Promise<boolean> {\n  return new Promise(function (res) {\n    if (skipHeaders) {\n      res(false);\n    } else {\n      let ruleId = getRuleIdFromHostname(hostname);\n      shouldDelegateDNR().then((delegate) => {\n        if (delegate) {\n          sendMessageToBackground({\n            intent: \"disableXFrameHeaders\",\n            hostname: hostname,\n            skipHeaders: skipHeaders,\n          }).then(() => {\n            res(true);\n          });\n        } else {\n          chrome.declarativeNetRequest.updateSessionRules({\n            removeRuleIds: [ruleId],\n            addRules: [\n              {\n                id: ruleId,\n                priority: 1,\n                action: {\n                  type: \"modifyHeaders\" as RuleActionType,\n                  responseHeaders: [\n                    {\n                      header: \"x-frame-options\",\n                      operation: \"remove\" as HeaderOperation,\n                    },\n                    {\n                      header: \"content-security-policy\",\n                      operation: \"remove\" as HeaderOperation,\n                    },\n                    {\n                      header: \"X-Frame-Options\",\n                      operation: \"remove\" as HeaderOperation,\n                    },\n                    {\n                      header: \"Content-Security-Policy\",\n                      operation: \"remove\" as HeaderOperation,\n                    },\n                    {\n                      header: \"Frame-Options\",\n                      operation: \"remove\" as HeaderOperation,\n                    },\n                  ],\n                },\n                condition: {\n                  resourceTypes: [\"sub_frame\" as ResourceType],\n                  urlFilter: \"*://*/*\",\n                  // `*${hostname}*`, --> specific filter disabled because\n                  // there are internal redirects that need to be handled.\n                  // Need to find a way to handle redirects and disable headers\n                  // for all of them (while leaving them on for other sites).\n                },\n              },\n            ],\n          });\n          res(true);\n        }\n      });\n    }\n  });\n}\n\nexport function enableXFrameHeaders(hostname: string): Promise<boolean> {\n  return new Promise(function (res) {\n    let ruleId = getRuleIdFromHostname(hostname);\n    shouldDelegateDNR().then((delegate) => {\n      if (delegate) {\n        sendMessageToBackground({\n          intent: \"enableXFrameHeaders\",\n          hostname: hostname,\n        }).then(() => {\n          res(true);\n        });\n      } else {\n        chrome.declarativeNetRequest.updateSessionRules({\n          removeRuleIds: [ruleId],\n        });\n        res(true);\n      }\n    });\n  });\n}\n\nexport function getRuleIdFromHostname(hostname: string): number {\n  // Disabled because a hostname can redirect to another hostname.\n  // We need to disable the headers for the redirected hostname too.\n  // TODO: Find a way to \"map out\" the redirects and disable the headers for all of them.\n  /*\n  let hashNumber = 0;\n  for (let i = 0; i < hostname.length; i++) {\n    hashNumber += hostname.charCodeAt(i);\n  }\n  return hashNumber;\n  */\n  return RULE_ID_XFRAME;\n}\n\nexport function shouldDelegateDNR(): Promise<boolean> {\n  return new Promise((resolve) => {\n    try {\n      chrome.declarativeNetRequest.getDynamicRules((rules) => {\n        if (chrome.runtime.lastError) {\n          resolve(true);\n        } else {\n          resolve(false);\n        }\n      });\n    } catch (error) {\n      resolve(true);\n    }\n  });\n}\n","import { DATA_ID_IFRAME } from \"../constants\";\n\nexport function getFrameCount() {\n  return document.querySelectorAll(`[data-id=${DATA_ID_IFRAME}]`).length;\n}\n","export function injectHiddenIFrame(\n  url: string,\n  id: string,\n  onload = function () {},\n  width = \"500px\",\n  data_id = \"\",\n  should_sandbox = false,\n  sandbox_attributes = \"\",\n) {\n  let iframe: HTMLIFrameElement = document.createElement(\"iframe\");\n  iframe.id = id;\n  // credentialles iframe to avoid leaking cookies & session data\n  // https://developer.mozilla.org/en-US/docs/Web/Security/IFrame_credentialless\n  // Experimental feature, not supported by all browsers\n  // @ts-ignore\n  iframe.credentialless = true;\n  iframe.style.width = width;\n  iframe.style.height = \"200px\";\n  iframe.style.display = \"none\";\n  if (should_sandbox) {\n    iframe.setAttribute(\"sandbox\", \"\");\n    if (sandbox_attributes !== \"\")\n      iframe.setAttribute(\"sandbox\", sandbox_attributes);\n  }\n  if (data_id !== \"\") iframe.setAttribute(\"data-id\", data_id);\n  iframe.src = url;\n  iframe.onload = onload;\n  document.body.prepend(iframe);\n}\n\nexport function inIframe(): boolean {\n  try {\n    return window.self !== window.top;\n  } catch (e) {\n    return true;\n  }\n}\n","import HeaderOperation = chrome.declarativeNetRequest.HeaderOperation;\nimport RuleActionType = chrome.declarativeNetRequest.RuleActionType;\nimport ResourceType = chrome.declarativeNetRequest.ResourceType;\nimport Rule = chrome.declarativeNetRequest.Rule;\nimport { Logger } from \"../logger/logger\";\nimport {\n  RULE_ID_CONTENT_DISPOSITION,\n  RULE_ID_CONTENT_TYPE,\n  RULE_ID_VALUE_TO_MODIFY_CONTENT_TYPE_TO,\n} from \"../constants\";\nimport { shouldDelegateDNR } from \"./dnr-helpers\";\nimport { sendMessageToBackground } from \"./messaging-helpers\";\ninterface Header {\n  name: string;\n  value: string;\n}\n\ninterface ProcessHeadersResult {\n  removeContentDisposition: boolean;\n  modifyContentType: boolean;\n  valueToModifyContentTypeTo: string;\n  error?: boolean;\n}\n\nexport async function sendToBackgroundToSeeIfTriggersDownload(\n  url: string,\n  triggersDownload: boolean,\n): Promise<boolean> {\n  return new Promise(function (res) {\n      sendMessageToBackground({\n        intent: \"seeIfTriggersDownload\",\n        url: url,\n        triggersDownload: triggersDownload,\n      }).then((response) => {\n        res(response);\n      });\n  });\n}\n\nexport async function seeIfTriggersDownload(\n  url: string,\n  triggersDownload: boolean,\n): Promise<string> {\n  return new Promise(function (res) {\n    if (!triggersDownload) {\n      res(\"done\");\n    } else {\n      let rulesToApply: Rule[] = [];\n      fetchAndProcessHeaders(url).then(function (\n        result: { error: boolean } | ProcessHeadersResult,\n      ) {\n        Logger.log(\"fetchAndProcessHeaders =>\", result);\n        if (result.error) {\n          res(\"error\");\n        } else {\n          if (\n            \"removeContentDisposition\" in result &&\n            result.removeContentDisposition\n          ) {\n            rulesToApply.push({\n              id: RULE_ID_CONTENT_DISPOSITION,\n              priority: 2,\n              action: {\n                type: \"modifyHeaders\" as RuleActionType,\n                responseHeaders: [\n                  {\n                    header: \"content-disposition\",\n                    operation: \"remove\" as HeaderOperation,\n                  },\n                ],\n              },\n              condition: {\n                resourceTypes: [\"sub_frame\" as ResourceType],\n                urlFilter: \"*://*/*\",\n              },\n            });\n          }\n          if (\"modifyContentType\" in result && result.modifyContentType) {\n            rulesToApply.push({\n              id: RULE_ID_CONTENT_TYPE,\n              priority: 2,\n              action: {\n                type: \"modifyHeaders\" as RuleActionType,\n                responseHeaders: [\n                  {\n                    header: \"content-type\",\n                    operation: \"remove\" as HeaderOperation,\n                  },\n                ],\n              },\n              condition: {\n                resourceTypes: [\"sub_frame\" as ResourceType],\n                urlFilter: \"*://*/*\",\n              },\n            });\n          }\n          if (\n            \"valueToModifyContentTypeTo\" in result &&\n            result.valueToModifyContentTypeTo\n          ) {\n            rulesToApply.push({\n              id: RULE_ID_VALUE_TO_MODIFY_CONTENT_TYPE_TO,\n              priority: 2,\n              action: {\n                type: \"modifyHeaders\" as RuleActionType,\n                responseHeaders: [\n                  {\n                    header: \"content-type\",\n                    operation: \"set\" as HeaderOperation,\n                    value: result.valueToModifyContentTypeTo,\n                  },\n                ],\n              },\n              condition: {\n                resourceTypes: [\"sub_frame\" as ResourceType],\n                urlFilter: \"*://*/*\",\n              },\n            });\n          }\n          chrome.declarativeNetRequest.updateSessionRules({\n            removeRuleIds: [\n              RULE_ID_CONTENT_DISPOSITION,\n              RULE_ID_CONTENT_TYPE,\n              RULE_ID_VALUE_TO_MODIFY_CONTENT_TYPE_TO,\n            ],\n            addRules: rulesToApply,\n          });\n          res(\"done\");\n        }\n      });\n    }\n  });\n}\n\nexport async function resetTriggersDownload() {\n  return new Promise(function (res) {\n    shouldDelegateDNR().then((delegate) => {\n      if (delegate) {\n        sendMessageToBackground({\n          intent: \"resetTriggersDownload\",\n        }).then(() => {\n          res(\"done\");\n        });\n      } else {\n        chrome.declarativeNetRequest.updateSessionRules({\n          removeRuleIds: [\n            RULE_ID_CONTENT_DISPOSITION,\n            RULE_ID_CONTENT_TYPE,\n            RULE_ID_VALUE_TO_MODIFY_CONTENT_TYPE_TO,\n          ],\n        });\n        res(\"done\");\n      }\n    });\n  });\n}\nexport function fetchAndProcessHeaders(\n  url: string,\n): Promise<{ error: boolean } | ProcessHeadersResult> {\n  return fetch(url)\n    .then((response) => {\n      if (!response.ok) {\n        return { error: true };\n      }\n      const result = processHeaders(response, response.url);\n      return {\n        ...result,\n        ...{\n          error: false,\n        },\n      };\n    })\n    .catch((error) => {\n      Logger.error(\"Fetch error:\", error);\n      return { error: true };\n    });\n}\n\nexport function processHeaders(\n  response: Response,\n  url: string,\n): ProcessHeadersResult {\n  let headers: Header[] = [];\n  response.headers.forEach((value: string, name: string) => {\n    headers.push({ name, value });\n  });\n  let removeContentDisposition: boolean = false;\n  let modifyContentType: boolean = false;\n  let valueToModifyContentTypeTo: string = \"\";\n  // Process 'content-disposition'\n  for (let i = 0; i < headers.length; i++) {\n    if (\n      headers[i].name.toLowerCase() === \"content-disposition\" &&\n      headers[i].value.indexOf(\"attachment\") === 0\n    ) {\n      removeContentDisposition = true;\n      headers.splice(i, 1);\n      break;\n    }\n  }\n  // Process 'content-type'\n  for (let j: number = 0; j < headers.length; j++) {\n    if (headers[j].name.toLowerCase() === \"content-type\") {\n      if (\n        headers[j].value === \"application/octet-stream\" ||\n        headers[j].value === \"application/x-download\"\n      ) {\n        let fileType: string = url\n          .substring(url.lastIndexOf(\".\") + 1)\n          .toLowerCase();\n        let skip: string[] = [\n          \"exe\",\n          \"dmg\",\n          \"deb\",\n          \"rpm\",\n          \"apk\",\n          \"zip\",\n          \"rar\",\n          \"7z\",\n          \"gz\",\n          \"xz\",\n        ];\n        let fixApplication: string[] = [\"pdf\", \"json\", \"xml\", \"ogg\"];\n        let fixImage: string[] = [\"gif\", \"jpg\", \"jpeg\", \"png\", \"tiff\"];\n\n        if (!skip.includes(fileType)) {\n          modifyContentType = true;\n          if (fixApplication.includes(fileType)) {\n            valueToModifyContentTypeTo = \"application/\" + fileType;\n          } else if (fixImage.includes(fileType)) {\n            valueToModifyContentTypeTo = \"image/\" + fileType;\n          } else {\n            valueToModifyContentTypeTo = \"text/plain\";\n          }\n          headers[j].value = valueToModifyContentTypeTo;\n        }\n      }\n      break;\n    }\n  }\n  return {\n    removeContentDisposition,\n    modifyContentType,\n    valueToModifyContentTypeTo,\n  };\n}\n","import { MAX_PARALLEL_EXECUTIONS, DATA_ID_IFRAME } from \"../constants\";\nimport { insertInQueue } from \"./queue-crawl\";\nimport { setLifespanForIframe } from \"./reset-crawl\";\nimport { disableXFrameHeaders } from \"../utils/dnr-helpers\";\nimport { getFrameCount } from \"../utils/utils\";\nimport { injectHiddenIFrame } from \"../utils/iframe-helpers\";\nimport { sendToBackgroundToSeeIfTriggersDownload } from \"../utils/triggers-download-helpers\";\nimport { Logger } from \"../logger/logger\";\n\nexport async function preProcessCrawl(dataPacket: { [key: string]: any }) {\n  let type_event: string = dataPacket.hasOwnProperty(\"type_event\")\n    ? dataPacket.type_event\n    : \"crawl\";\n  if (type_event === \"heartbeat\") return;\n  Logger.log(\"📋 Data Packet 📋\");\n  Logger.log(dataPacket);\n  Logger.log(\"📋 ----------- 📋\");\n  let url: string = dataPacket.url;\n  let recordID: string = dataPacket.recordID;\n  let waitBeforeScraping: number =\n    parseInt(dataPacket.waitBeforeScraping) * 1000;\n  let saveHtml: boolean =\n    dataPacket.saveHtml.toString().toLowerCase() === \"true\";\n  let saveMarkdown: boolean =\n    dataPacket.saveMarkdown.toString().toLowerCase() === \"true\";\n  let removeCSSselectors: string = dataPacket.removeCSSselectors;\n  let classNamesToBeRemoved: string[] = JSON.parse(\n    dataPacket.classNamesToBeRemoved,\n  );\n  let fastLane: boolean = dataPacket.hasOwnProperty(\"fastLane\")\n    ? dataPacket.fastLane.toString().toLowerCase() === \"true\"\n    : false;\n  let waitForElement: string = dataPacket.hasOwnProperty(\"waitForElement\")\n    ? dataPacket.waitForElement\n    : \"none\";\n  let waitForElementTime: number = dataPacket.hasOwnProperty(\n    \"waitForElementTime\",\n  )\n    ? parseInt(dataPacket.waitForElementTime)\n    : 0;\n  let removeImages: boolean = dataPacket.hasOwnProperty(\"removeImages\")\n    ? dataPacket.removeImages.toString().toLowerCase() === \"true\"\n    : false;\n  let htmlTransformer: string = dataPacket.hasOwnProperty(\"htmlTransformer\")\n    ? dataPacket.htmlTransformer\n    : \"none\";\n  let isPDF: boolean = url.includes(\"?\")\n    ? url.split(\"?\")[0].endsWith(\".pdf\")\n    : url.endsWith(\".pdf\");\n  let saveText: boolean =\n    dataPacket.saveText.toString().toLowerCase() === \"true\";\n  let orgId: string = dataPacket.hasOwnProperty(\"orgId\")\n    ? dataPacket.orgId\n    : \"\";\n  let shouldSandbox: boolean = dataPacket.hasOwnProperty(\"shouldDisableJS\")\n    ? dataPacket.shouldDisableJS.toString().toLowerCase() === \"true\"\n    : false;\n  let sandBoxAttributes: string = dataPacket.hasOwnProperty(\"sandBoxAttributes\")\n    ? dataPacket.sandBoxAttributes\n    : \"\";\n  let triggersDownload: boolean = dataPacket.hasOwnProperty(\"triggersDownload\")\n    ? dataPacket.triggersDownload.toString().toLowerCase() === \"true\"\n    : false;\n  let skipHeaders: boolean = dataPacket.hasOwnProperty(\"skipHeaders\")\n    ? dataPacket.skipHeaders.toString().toLowerCase() === \"true\"\n    : false;\n\n  crawlP2P(\n    url,\n    recordID,\n    waitBeforeScraping,\n    saveHtml,\n    saveMarkdown,\n    removeCSSselectors,\n    classNamesToBeRemoved,\n    fastLane,\n    waitForElement,\n    waitForElementTime,\n    removeImages,\n    htmlTransformer,\n    isPDF,\n    saveText,\n    orgId,\n    shouldSandbox,\n    sandBoxAttributes,\n    triggersDownload,\n    skipHeaders,\n  );\n}\n\nexport function preProcessUrl(url: string, recordID: string): string[] {\n  if (url.startsWith(\"http://\")) url = url.replace(\"http://\", \"https://\");\n  let urlObj = new URL(url);\n  let params = new URLSearchParams(urlObj.search);\n  params.append(\"mellowtel-p2p\", \"true\");\n  params.append(\"should-crawl\", \"true\");\n  params.append(\"record-id\", recordID);\n  urlObj.search = params.toString();\n  let hostname: string = urlObj.hostname;\n  url = urlObj.toString();\n  return [url, hostname];\n}\n\nexport function crawlP2P(\n  url: string,\n  recordID: string,\n  waitBeforeScraping: number,\n  saveHtml: boolean,\n  saveMarkdown: boolean,\n  removeCSSselectors: string,\n  classNamesToBeRemoved: string[],\n  fastLane: boolean,\n  waitForElement: string,\n  waitForElementTime: number,\n  removeImages: boolean,\n  htmlTransformer: string,\n  isPDF: boolean,\n  saveText: boolean,\n  orgId: string,\n  shouldSandbox: boolean,\n  sandBoxAttributes: string,\n  triggersDownload: boolean,\n  skipHeaders: boolean,\n) {\n  let [url_to_crawl, hostname] = preProcessUrl(url, recordID);\n  Logger.log(\"[🌐 crawlP2P] : url_to_crawl => \" + url_to_crawl);\n  Logger.log(\"[🌐 crawlP2P] : hostname => \" + hostname);\n  Promise.all([\n    disableXFrameHeaders(hostname, skipHeaders),\n    sendToBackgroundToSeeIfTriggersDownload(url, triggersDownload),\n  ]).then(async () => {\n    let eventData: { [key: string]: any } = {\n      isMellowtelCrawl: true,\n      fastLane: fastLane,\n      url_to_crawl: url_to_crawl,\n      recordID: recordID,\n      removeCSSselectors: removeCSSselectors,\n      classNamesToBeRemoved: classNamesToBeRemoved,\n      saveHtml: saveHtml,\n      saveMarkdown: saveMarkdown,\n      waitBeforeScraping: waitBeforeScraping,\n      waitForElement: waitForElement,\n      waitForElementTime: waitForElementTime,\n      removeImages: removeImages,\n      htmlTransformer: htmlTransformer,\n      isPDF: isPDF,\n      saveText: saveText,\n      orgId: orgId,\n    };\n    let frameCount = getFrameCount();\n    if (frameCount >= MAX_PARALLEL_EXECUTIONS) {\n      Logger.log(\"Too many iframes on page. Not injecting\");\n      let dataToBeQueued = {\n        url: url,\n        recordID: recordID,\n        eventData: eventData,\n        waitForElement: waitForElement,\n        shouldSandbox: shouldSandbox,\n        sandBoxAttributes: sandBoxAttributes,\n      };\n      await insertInQueue(dataToBeQueued);\n    } else {\n      proceedWithActivation(\n        url,\n        recordID,\n        eventData,\n        waitForElement,\n        shouldSandbox,\n        sandBoxAttributes,\n      );\n    }\n  });\n}\n\nexport function proceedWithActivation(\n  url: string,\n  recordID: string,\n  eventData: { [key: string]: any },\n  waitForElement: string,\n  shouldSandbox: boolean,\n  sandBoxAttributes: string,\n) {\n  setLifespanForIframe(recordID, parseInt(eventData.waitBeforeScraping));\n  injectHiddenIFrame(\n    url,\n    recordID,\n    function () {\n      if (waitForElement === \"none\") {\n        let iframe: HTMLIFrameElement | null = document.getElementById(\n          recordID,\n        ) as HTMLIFrameElement | null;\n        if (iframe) iframe.contentWindow?.postMessage(eventData, \"*\");\n      }\n    },\n    \"800px\",\n    DATA_ID_IFRAME,\n    shouldSandbox,\n    sandBoxAttributes,\n  );\n  // if waitForElement isn't none, don't\n  // wait to load the iframe, but keep\n  // sending message until iframe replies.\n  if (waitForElement !== \"none\") {\n    let iFrameReplied = false;\n    window.addEventListener(\"message\", function (event) {\n      if (event.data.isMellowtelReply) iFrameReplied = true;\n    });\n    let timer = setInterval(function () {\n      let iframe: HTMLIFrameElement | null = document.getElementById(\n        recordID,\n      ) as HTMLIFrameElement | null;\n      if (iFrameReplied) {\n        clearInterval(timer);\n        return;\n      }\n      if (iframe) iframe.contentWindow?.postMessage(eventData, \"*\");\n    }, 50);\n  }\n}\n","import { getLastFromQueue } from \"./queue-crawl\";\nimport { LIFESPAN_IFRAME, MAX_PARALLEL_EXECUTIONS } from \"../constants\";\nimport { proceedWithActivation } from \"./execute-crawl\";\nimport { getFrameCount } from \"../utils/utils\";\nimport { enableXFrameHeaders } from \"../utils/dnr-helpers\";\nimport { Logger } from \"../logger/logger\";\nimport { resetTriggersDownload } from \"../utils/triggers-download-helpers\";\n\nexport async function resetAfterCrawl(recordID: string) {\n  let dataPacket = await getLastFromQueue();\n  if (dataPacket && dataPacket.url !== \"\") {\n    let frameCount = getFrameCount();\n    Logger.log(\"[🌐] : frameCount in cleanUpAfterCrawl  => \" + frameCount);\n    if (frameCount <= MAX_PARALLEL_EXECUTIONS) {\n      Logger.log(\"[🌐] getLastFromQueue : dataPacket => \");\n      Logger.log(dataPacket);\n      proceedWithActivation(\n        dataPacket.url,\n        dataPacket.recordID,\n        dataPacket.eventData,\n        dataPacket.waitForElement,\n        dataPacket.shouldSandbox,\n        dataPacket.sandBoxAttributes,\n      );\n    }\n  } else {\n    setTimeout(() => {\n      let frameCount = getFrameCount();\n      Logger.log(\n        \"[🌐] : frameCount in cleanUpAfterCrawl (before resetting headers)  => \" +\n          frameCount,\n      );\n      if (frameCount === 0) {\n        enableXFrameHeaders(\"\");\n        resetTriggersDownload();\n      }\n    }, 15000);\n  }\n}\n\nexport function setLifespanForIframe(\n  recordID: string,\n  waitBeforeScraping: number,\n) {\n  Logger.log(\n    \"Setting lifespan for iframe => \" +\n      (LIFESPAN_IFRAME + waitBeforeScraping) +\n      \" ms\",\n  );\n  setTimeout(async () => {\n    let iframe = document.getElementById(recordID);\n    if (iframe) iframe.remove();\n    await resetAfterCrawl(recordID);\n  }, LIFESPAN_IFRAME + waitBeforeScraping);\n}\n","import {\n  sendMessageToBackground,\n  sendMessageToContentScript,\n} from \"../utils/messaging-helpers\";\n\nexport function setSharedMemory(key: string, value: any): void {\n  let hiddenInput: HTMLInputElement = document.createElement(\"input\");\n  hiddenInput.setAttribute(\"type\", \"hidden\");\n  hiddenInput.setAttribute(\"id\", key);\n  hiddenInput.setAttribute(\"value\", value);\n  document.body.appendChild(hiddenInput);\n  sendMessageToBackground({\n    intent: \"setSharedMemoryBCK\",\n    key: key,\n    value: value,\n  }).then();\n}\n\nexport function getSharedMemory(key: string): Promise<any> {\n  return new Promise((resolve) => {\n    // send message to background.js, that will then broadcast it to all tabs\n    sendMessageToBackground({\n      intent: \"getSharedMemoryBCK\",\n      key: key,\n    }).then(function (response) {\n      resolve(response);\n    });\n  });\n}\n\nexport function getSharedMemoryDOM(key: string) {\n  return new Promise((resolve) => {\n    let hiddenInput: HTMLElement | null = document.getElementById(key);\n    if (hiddenInput) {\n      resolve(true);\n    } else {\n      resolve(false);\n    }\n  });\n}\n\nexport function removeSharedMemory(key: string): void {\n  let hiddenInput: HTMLElement | null = document.getElementById(key);\n  if (hiddenInput) hiddenInput.remove();\n}\n\nexport async function setSharedMemoryBCK(key: string, tabId: number) {\n  return new Promise(function (res) {\n    chrome.storage.local.set({ [key]: tabId }, function () {\n      res(\"done\");\n    });\n  });\n}\n\nexport async function getSharedMemoryBCK(key: string) {\n  return new Promise(function (res) {\n    chrome.tabs.query({}, function (tabs) {\n      let numTabs: number = tabs.length;\n      let numTabsChecked: number = 0;\n      let mllwtlFramePresent: boolean = false;\n      for (let i = 0; i < numTabs; i++) {\n        sendMessageToContentScript(tabs[i].id!, {\n          intent: \"getSharedMemoryDOM\",\n          key: key,\n        }).then(function (response): void {\n          numTabsChecked++;\n          if (response) {\n            mllwtlFramePresent = true;\n          }\n          if (numTabsChecked === numTabs) {\n            res(mllwtlFramePresent);\n          }\n        });\n      }\n    });\n  });\n}\n","export function testCSP(onload_callback = function () {}): void {\n  const img: HTMLImageElement = new Image();\n  img.src = \"https://mellowtel.s3.amazonaws.com/lightning-boltrepo-com.svg\";\n  img.onload = onload_callback;\n  img.id = \"mellowtel-csp-image\";\n  img.style.display = \"none\";\n  document.body.appendChild(img);\n}\n\nexport function removeCSPTestImage(): void {\n  const img: HTMLImageElement | null = document.getElementById(\n    \"mellowtel-csp-image\",\n  ) as HTMLImageElement;\n  if (img) img.remove();\n}\n\nexport function isCSPEnabled(): Promise<boolean> {\n  return new Promise((resolve) => {\n    document.addEventListener(\"securitypolicyviolation\", (e) => {\n      if (\n        e.blockedURI ===\n        \"https://mellowtel.s3.amazonaws.com/lightning-boltrepo-com.svg\"\n      ) {\n        removeCSPTestImage();\n        resolve(true);\n      }\n    });\n    testCSP(() => {\n      removeCSPTestImage();\n      resolve(false);\n    });\n  });\n}\n","export function executeFunctionIfOrWhenBodyExists(func: Function): void {\n  if (document.body) {\n    func();\n  } else {\n    new MutationObserver((_, observer) => {\n      const { body } = document;\n      if (!body) return;\n      observer.disconnect();\n      func();\n    }).observe(document.documentElement, { childList: true });\n  }\n}\n","import { isCSPEnabled } from \"../content-script/test-csp\";\nimport { setUpContentScriptListeners } from \"./listener-helpers\";\nimport { getIdentifier } from \"./identity-helpers\";\nimport { executeFunctionIfOrWhenBodyExists } from \"./document-body-observer\";\nimport { DATA_ID_IFRAME } from \"../constants\";\n\nexport function startMellowtelWebsocket() {\n  executeFunctionIfOrWhenBodyExists(() => {\n    isCSPEnabled().then(async (cspEnabled: boolean) => {\n      if (!cspEnabled) {\n        await setUpContentScriptListeners();\n        const websocketModule = await import(\"../content-script/websocket\");\n        getIdentifier().then((identifier: string) => {\n          websocketModule.startConnectionWs(identifier);\n        });\n      }\n    });\n  });\n}\n\nexport function stopMellowtelConnection() {\n  // todo: send message to background, and remove all iframes\n  let iframes: NodeListOf<Element> = document.querySelectorAll(\n    `[data-id=\"${DATA_ID_IFRAME}\"]`,\n  );\n  iframes.forEach((iframe) => {\n    iframe.remove();\n  });\n}\n\nexport function isMellowtelStarted(): Promise<boolean> {\n  return new Promise((resolve) => {\n    chrome.storage.local.get(\"mellowtelStatus\", function (result) {\n      if (result !== undefined && result[\"mellowtelStatus\"] === \"start\") {\n        resolve(true);\n      } else {\n        resolve(false);\n      }\n    });\n  });\n}\n","import WebSocket from \"isomorphic-ws\";\nimport { MELLOWTEL_VERSION } from \"../constants\";\nimport { preProcessCrawl } from \"./execute-crawl\";\nimport {\n  getSharedMemory,\n  removeSharedMemory,\n  setSharedMemory,\n} from \"./shared-memory\";\nimport { isMellowtelStarted } from \"../utils/start-stop-helpers\";\nimport { Logger } from \"../logger/logger\";\n\nconst ws_url: string =\n  \"wss://7joy2r59rf.execute-api.us-east-1.amazonaws.com/production/\";\n\nexport async function startConnectionWs(identifier: string): WebSocket {\n  await getSharedMemory(\"webSocketConnectedMellowtel\").then((response) => {\n    if (!response) {\n      const ws = new WebSocket(\n        `${ws_url}?node_id=${identifier}&version=${MELLOWTEL_VERSION}`,\n      );\n\n      ws.onopen = function open() {\n        setSharedMemory(\"webSocketConnectedMellowtel\", \"true\");\n        Logger.log(\n          `[🌐]: connected with node_id= ${identifier} and version= ${MELLOWTEL_VERSION}`,\n        );\n      };\n\n      ws.onclose = async function close() {\n        removeSharedMemory(\"webSocketConnectedMellowtel\");\n        if (await isMellowtelStarted()) {\n          startConnectionWs(identifier);\n        }\n      };\n\n      ws.onmessage = async function incoming(data: any) {\n        if (await isMellowtelStarted()) {\n          await preProcessCrawl(JSON.parse(data.data));\n        }\n      };\n\n      return ws;\n    }\n  });\n}\n","import {\n  deleteLocalStorage,\n  getLocalStorage,\n  setLocalStorage,\n} from \"./storage-helpers\";\nimport { resetAfterCrawl } from \"../content-script/reset-crawl\";\nimport { disableXFrameHeaders, enableXFrameHeaders } from \"./dnr-helpers\";\nimport {\n  getSharedMemoryBCK,\n  getSharedMemoryDOM,\n  setSharedMemoryBCK,\n} from \"../content-script/shared-memory\";\nimport { startConnectionWs } from \"../content-script/websocket\";\nimport { getIdentifier } from \"./identity-helpers\";\nimport { resetTriggersDownload, seeIfTriggersDownload } from \"./triggers-download-helpers\";\nimport { sendMessageToContentScript } from \"./messaging-helpers\";\n\nexport async function setUpBackgroundListeners() {\n    chrome.runtime.onMessage.addListener(\n        function (request, sender, sendResponse) {\n            if (request.intent == \"getLocalStorage\") {\n                getLocalStorage(request.key).then(sendResponse);\n            }\n            if (request.intent == \"setLocalStorage\") {\n                setLocalStorage(request.key, request.value).then(sendResponse);\n            }\n            if (request.intent == \"deleteLocalStorage\") {\n                deleteLocalStorage(JSON.parse(request.keys)).then(sendResponse);\n            }\n            if (request.intent == \"disableXFrameHeaders\") {\n                disableXFrameHeaders(\n                    request.hostname,\n                    request.skipHeaders,\n                ).then(sendResponse);\n            }\n            if (request.intent == \"enableXFrameHeaders\") {\n                enableXFrameHeaders(request.hostname).then(sendResponse);\n            }\n            if (request.intent == \"resetTriggersDownload\") {\n                resetTriggersDownload().then(sendResponse);\n            }\n            if (request.intent === \"setSharedMemoryBCK\") {\n                setSharedMemoryBCK(request.key, sender.tab?.id!).then(sendResponse);\n            }\n            if (request.intent === \"getSharedMemoryBCK\") {\n                getSharedMemoryBCK(request.key).then(sendResponse);\n            }\n            if (request.intent === \"seeIfTriggersDownload\") {\n                seeIfTriggersDownload(\n                    request.url,\n                    request.triggersDownload,\n                ).then(sendResponse);\n            }\n            if (request.intent === \"deleteIframeMellowtel\") {\n                sendMessageToContentScript(sender.tab?.id!, {\n                    target: \"contentScriptMellowtel\",\n                    intent: \"deleteIframeMellowtel\",\n                    recordID: request.recordID,\n                }).then(sendResponse);\n            }\n            return true; // return true to indicate you want to send a response asynchronously\n        },\n    );\n}\n\nexport async function setUpContentScriptListeners() {\n  chrome.runtime.onMessage.addListener(\n    async function (request, sender, sendResponse) {\n      if (request.target !== \"contentScriptMellowtel\") return false;\n      if (request.intent === \"deleteIframeMellowtel\") {\n        let recordID = request.recordID;\n        let iframe = document.getElementById(recordID);\n        if (iframe) iframe.remove();\n        await resetAfterCrawl(recordID);\n      }\n      if (request.intent === \"getSharedMemoryDOM\") {\n        getSharedMemoryDOM(request.key).then(sendResponse);\n      }\n      if (request.intent === \"startConnectionMellowtel\") {\n        getIdentifier().then((identifier: string) => {\n          startConnectionWs(identifier);\n        });\n      }\n      return true; // return true to indicate you want to send a response asynchronously\n    },\n  );\n}\n","export function getSelectorInfo(string_selector: string) {\n  const replaceQuotes = (string: string) => {\n    return string.replaceAll('\"', \"\").replaceAll(\"'\", \"\");\n  };\n  if (string_selector.includes(\"getElementById\")) {\n    return {\n      dSelectorToUse: \"getElementById\",\n      selectorId: replaceQuotes(\n        string_selector.split(\"getElementById\")[1].split(\"(\")[1].split(\")\")[0],\n      ),\n      index: 0,\n    };\n  } else if (string_selector.includes(\"getElementsByClassName\")) {\n    let isThereClassNumber = string_selector.includes(\")[\");\n    if (isThereClassNumber) {\n      let classNumber = parseInt(string_selector.split(\")[\")[1].split(\"]\")[0]);\n      return {\n        dSelectorToUse: \"getElementsByClassName_withIndex\",\n        selectorId: replaceQuotes(\n          string_selector\n            .split(\"getElementsByClassName\")[1]\n            .split(\"(\")[1]\n            .split(\")\")[0],\n        ),\n        index: classNumber,\n      };\n    }\n    return {\n      dSelectorToUse: \"getElementsByClassName\",\n      selectorId: replaceQuotes(\n        string_selector\n          .split(\"getElementsByClassName\")[1]\n          .split(\"(\")[1]\n          .split(\")\")[0],\n      ),\n      index: 0,\n    };\n  } else if (string_selector.includes(\"getElementsByTagName\")) {\n    return {\n      dSelectorToUse: \"getElementsByTagName\",\n      selectorId: replaceQuotes(\n        string_selector\n          .split(\"getElementsByTagName\")[1]\n          .split(\"(\")[1]\n          .split(\")\")[0],\n      ),\n      index: 0,\n    };\n  } else if (string_selector.includes(\"querySelector\")) {\n    return {\n      dSelectorToUse: \"querySelector\",\n      selectorId: replaceQuotes(\n        string_selector.split(\"querySelector\")[1].split(\"(\")[1].split(\")\")[0],\n      ),\n      index: 0,\n    };\n  } else if (string_selector.includes(\"querySelectorAll\")) {\n    return {\n      dSelectorToUse: \"querySelectorAll\",\n      selectorId: replaceQuotes(\n        string_selector\n          .split(\"querySelectorAll\")[1]\n          .split(\"(\")[1]\n          .split(\")\")[0],\n      ),\n      index: 0,\n    };\n  }\n}\n\nexport type DynamicSelector =\n  | \"getElementById\"\n  | \"getElementsByClassName\"\n  | \"getElementsByTagName\"\n  | \"querySelector\"\n  | \"querySelectorAll\"\n  | \"getElementsByClassName_withIndex\"\n  | \"getElementsByName\";\n\nexport function waitForElementDynamicSelector(\n  dSelectorToUse: DynamicSelector,\n  selectorId: string,\n  index: number = 0,\n  timeout?: number,\n): Promise<void> {\n  return new Promise((resolve, reject) => {\n    let timer: number | undefined;\n\n    const checkElement = (): boolean => {\n      switch (dSelectorToUse) {\n        case \"getElementById\":\n          return !!document.getElementById(selectorId);\n        case \"getElementsByClassName\":\n        case \"getElementsByTagName\":\n        case \"getElementsByName\":\n          return document[dSelectorToUse](selectorId).length > 0;\n        case \"querySelector\":\n          return !!document.querySelector(selectorId);\n        case \"querySelectorAll\":\n          return document.querySelectorAll(selectorId).length > 0;\n        case \"getElementsByClassName_withIndex\":\n          const elements = document.getElementsByClassName(selectorId);\n          return elements.length > 0 && !!elements[index];\n        default:\n          return false;\n      }\n    };\n\n    if (checkElement()) return resolve();\n\n    const observer = new MutationObserver(() => {\n      if (checkElement()) {\n        observer.disconnect();\n        if (timer) clearTimeout(timer);\n        return resolve();\n      }\n    });\n\n    observer.observe(document.body, {\n      childList: true,\n      subtree: true,\n    });\n\n    if (timeout) {\n      timer = window.setTimeout(() => {\n        observer.disconnect();\n        reject(new Error(\"Timeout waiting for element\"));\n      }, timeout);\n    }\n  });\n}\n","export function isPdfEmbedElementPresent(): boolean {\n  let embedElements: HTMLCollectionOf<HTMLEmbedElement> =\n    document.getElementsByTagName(\"embed\");\n  for (let i = 0; i < embedElements.length; i++) {\n    let currentElement = embedElements[i];\n    if (currentElement.type === \"application/pdf\") {\n      return true;\n    }\n  }\n  return false;\n}\n","export function removeSelectorsFromDocument(document: Document) {\n  const selectorsToRemove = [\n    \"nav\",\n    \"footer\",\n    \"script\",\n    \"style\",\n    \"noscript\",\n    \"svg\",\n    '[role=\"alert\"]',\n    '[role=\"banner\"]',\n    '[role=\"dialog\"]',\n    '[role=\"alertdialog\"]',\n    '[role=\"region\"][aria-label*=\"skip\" i]',\n    '[aria-modal=\"true\"]',\n  ];\n  selectorsToRemove.forEach((selector) => {\n    const elements = document.querySelectorAll(selector);\n    elements.forEach((element) => element.remove());\n  });\n}\n\nexport function removeElementsByClassNames(classNamesToBeRemoved: string[]) {\n  for (let i = 0; i < classNamesToBeRemoved.length; i++) {\n    let className = classNamesToBeRemoved[i];\n    let elements = document.getElementsByClassName(className);\n    let elementsArray = Array.from(elements);\n    for (let j = 0; j < elementsArray.length; j++) {\n      let element = elementsArray[j];\n      if (element) element.remove();\n    }\n  }\n}\n\nexport function get_document_html(sep = \"\\n\", document: Document) {\n  let html = \"\";\n  let xml = new XMLSerializer();\n  for (let n of Array.from(document.childNodes)) {\n    if (n.nodeType === Node.ELEMENT_NODE)\n      if (n instanceof HTMLElement) {\n        html += n.outerHTML + sep;\n      } else html += xml.serializeToString(n) + sep;\n  }\n  return html;\n}\n\nexport function removeImagesDOM(document: Document) {\n  try {\n    let images = Array.from(\n      document.getElementsByTagName(\"img\"),\n    ) as HTMLImageElement[];\n    images.forEach(function (img) {\n      // iterate the images array\n      img.parentNode?.removeChild(img); // remove the child node via the parent node\n    });\n  } catch (e) {}\n}\n\nexport function removeElementIfPresent(element: HTMLElement | null) {\n  if (element) element.remove();\n}\n","import { sendMessageToBackground } from \"../utils/messaging-helpers\";\n\nexport function tellToDeleteIframe(recordID: string) {\n  return new Promise((resolve) => {\n    sendMessageToBackground({\n      intent: \"deleteIframeMellowtel\",\n      recordID: recordID,\n    }).then((response) => {\n      resolve(response);\n    });\n  });\n}\n","import { tellToDeleteIframe } from \"./message-background\";\nimport { getIdentifier } from \"../utils/identity-helpers\";\nimport { Logger } from \"../logger/logger\";\n\nexport function saveCrawl(\n  recordID: string,\n  content: string,\n  markDown: string,\n  fastLane: boolean,\n  url: string,\n  htmlTransformer: string,\n  orgId: string,\n  saveText: string,\n) {\n  Logger.log(\"📋 Saving Crawl 📋\");\n  Logger.log(\"RecordID:\", recordID);\n  const endpoint: string =\n    \"https://afcha2nmzsir4rr4zbta4tyy6e0fxjix.lambda-url.us-east-1.on.aws/\";\n\n  getIdentifier().then((node_identifier: string) => {\n    Logger.log(\"Node Identifier:\", node_identifier);\n    const bodyData = {\n      content: content,\n      markDown: markDown,\n      recordID: recordID,\n      fastLane: fastLane,\n      url: url,\n      htmlTransformer: htmlTransformer,\n      orgId: orgId,\n      saveText: saveText,\n      node_identifier: node_identifier,\n    };\n\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"text/plain\" },\n      body: JSON.stringify(bodyData),\n    };\n\n    Logger.log(\"Sending data to server:\", bodyData);\n\n    fetch(endpoint, requestOptions)\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return response.json();\n      })\n      .then((data) => {\n        Logger.log(\"Response from server:\", data);\n        return tellToDeleteIframe(recordID);\n      })\n      .catch((error) => {\n        Logger.error(\"Error:\", error);\n        return tellToDeleteIframe(recordID);\n      });\n  });\n}\n","/**\n  Source code: https://unpkg.com/turndown@7.1.2/dist/turndown.js\n  Github repo: https://github.com/mixmark-io/turndown\n  License: MIT License\n\n  Copyright (c) 2017 Dom Christie\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in all\n  copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n**/\n// @ts-nocheck\nexport var TurndownService = (function () {\n  \"use strict\";\n\n  function extend(destination) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) destination[key] = source[key];\n      }\n    }\n    return destination;\n  }\n\n  function repeat(character, count) {\n    return Array(count + 1).join(character);\n  }\n\n  function trimLeadingNewlines(string) {\n    return string.replace(/^\\n*/, \"\");\n  }\n\n  function trimTrailingNewlines(string) {\n    // avoid match-at-end regexp bottleneck, see #370\n    var indexEnd = string.length;\n    while (indexEnd > 0 && string[indexEnd - 1] === \"\\n\") indexEnd--;\n    return string.substring(0, indexEnd);\n  }\n\n  var blockElements = [\n    \"ADDRESS\",\n    \"ARTICLE\",\n    \"ASIDE\",\n    \"AUDIO\",\n    \"BLOCKQUOTE\",\n    \"BODY\",\n    \"CANVAS\",\n    \"CENTER\",\n    \"DD\",\n    \"DIR\",\n    \"DIV\",\n    \"DL\",\n    \"DT\",\n    \"FIELDSET\",\n    \"FIGCAPTION\",\n    \"FIGURE\",\n    \"FOOTER\",\n    \"FORM\",\n    \"FRAMESET\",\n    \"H1\",\n    \"H2\",\n    \"H3\",\n    \"H4\",\n    \"H5\",\n    \"H6\",\n    \"HEADER\",\n    \"HGROUP\",\n    \"HR\",\n    \"HTML\",\n    \"ISINDEX\",\n    \"LI\",\n    \"MAIN\",\n    \"MENU\",\n    \"NAV\",\n    \"NOFRAMES\",\n    \"NOSCRIPT\",\n    \"OL\",\n    \"OUTPUT\",\n    \"P\",\n    \"PRE\",\n    \"SECTION\",\n    \"TABLE\",\n    \"TBODY\",\n    \"TD\",\n    \"TFOOT\",\n    \"TH\",\n    \"THEAD\",\n    \"TR\",\n    \"UL\",\n  ];\n\n  function isBlock(node) {\n    return is(node, blockElements);\n  }\n\n  var voidElements = [\n    \"AREA\",\n    \"BASE\",\n    \"BR\",\n    \"COL\",\n    \"COMMAND\",\n    \"EMBED\",\n    \"HR\",\n    \"IMG\",\n    \"INPUT\",\n    \"KEYGEN\",\n    \"LINK\",\n    \"META\",\n    \"PARAM\",\n    \"SOURCE\",\n    \"TRACK\",\n    \"WBR\",\n  ];\n\n  function isVoid(node) {\n    return is(node, voidElements);\n  }\n\n  function hasVoid(node) {\n    return has(node, voidElements);\n  }\n\n  var meaningfulWhenBlankElements = [\n    \"A\",\n    \"TABLE\",\n    \"THEAD\",\n    \"TBODY\",\n    \"TFOOT\",\n    \"TH\",\n    \"TD\",\n    \"IFRAME\",\n    \"SCRIPT\",\n    \"AUDIO\",\n    \"VIDEO\",\n  ];\n\n  function isMeaningfulWhenBlank(node) {\n    return is(node, meaningfulWhenBlankElements);\n  }\n\n  function hasMeaningfulWhenBlank(node) {\n    return has(node, meaningfulWhenBlankElements);\n  }\n\n  function is(node, tagNames) {\n    return tagNames.indexOf(node.nodeName) >= 0;\n  }\n\n  function has(node, tagNames) {\n    return (\n      node.getElementsByTagName &&\n      tagNames.some(function (tagName) {\n        return node.getElementsByTagName(tagName).length;\n      })\n    );\n  }\n\n  var rules = {};\n\n  rules.paragraph = {\n    filter: \"p\",\n\n    replacement: function (content) {\n      return \"\\n\\n\" + content + \"\\n\\n\";\n    },\n  };\n\n  rules.lineBreak = {\n    filter: \"br\",\n\n    replacement: function (content, node, options) {\n      return options.br + \"\\n\";\n    },\n  };\n\n  rules.heading = {\n    filter: [\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"],\n\n    replacement: function (content, node, options) {\n      var hLevel = Number(node.nodeName.charAt(1));\n\n      if (options.headingStyle === \"setext\" && hLevel < 3) {\n        var underline = repeat(hLevel === 1 ? \"=\" : \"-\", content.length);\n        return \"\\n\\n\" + content + \"\\n\" + underline + \"\\n\\n\";\n      } else {\n        return \"\\n\\n\" + repeat(\"#\", hLevel) + \" \" + content + \"\\n\\n\";\n      }\n    },\n  };\n\n  rules.blockquote = {\n    filter: \"blockquote\",\n\n    replacement: function (content) {\n      content = content.replace(/^\\n+|\\n+$/g, \"\");\n      content = content.replace(/^/gm, \"> \");\n      return \"\\n\\n\" + content + \"\\n\\n\";\n    },\n  };\n\n  rules.list = {\n    filter: [\"ul\", \"ol\"],\n\n    replacement: function (content, node) {\n      var parent = node.parentNode;\n      if (parent.nodeName === \"LI\" && parent.lastElementChild === node) {\n        return \"\\n\" + content;\n      } else {\n        return \"\\n\\n\" + content + \"\\n\\n\";\n      }\n    },\n  };\n\n  rules.listItem = {\n    filter: \"li\",\n\n    replacement: function (content, node, options) {\n      content = content\n        .replace(/^\\n+/, \"\") // remove leading newlines\n        .replace(/\\n+$/, \"\\n\") // replace trailing newlines with just a single one\n        .replace(/\\n/gm, \"\\n    \"); // indent\n      var prefix = options.bulletListMarker + \"   \";\n      var parent = node.parentNode;\n      if (parent.nodeName === \"OL\") {\n        var start = parent.getAttribute(\"start\");\n        var index = Array.prototype.indexOf.call(parent.children, node);\n        prefix = (start ? Number(start) + index : index + 1) + \".  \";\n      }\n      return (\n        prefix +\n        content +\n        (node.nextSibling && !/\\n$/.test(content) ? \"\\n\" : \"\")\n      );\n    },\n  };\n\n  rules.indentedCodeBlock = {\n    filter: function (node, options) {\n      return (\n        options.codeBlockStyle === \"indented\" &&\n        node.nodeName === \"PRE\" &&\n        node.firstChild &&\n        node.firstChild.nodeName === \"CODE\"\n      );\n    },\n\n    replacement: function (content, node, options) {\n      return (\n        \"\\n\\n    \" +\n        node.firstChild.textContent.replace(/\\n/g, \"\\n    \") +\n        \"\\n\\n\"\n      );\n    },\n  };\n\n  rules.fencedCodeBlock = {\n    filter: function (node, options) {\n      return (\n        options.codeBlockStyle === \"fenced\" &&\n        node.nodeName === \"PRE\" &&\n        node.firstChild &&\n        node.firstChild.nodeName === \"CODE\"\n      );\n    },\n\n    replacement: function (content, node, options) {\n      var className = node.firstChild.getAttribute(\"class\") || \"\";\n      var language = (className.match(/language-(\\S+)/) || [null, \"\"])[1];\n      var code = node.firstChild.textContent;\n\n      var fenceChar = options.fence.charAt(0);\n      var fenceSize = 3;\n      var fenceInCodeRegex = new RegExp(\"^\" + fenceChar + \"{3,}\", \"gm\");\n\n      var match;\n      while ((match = fenceInCodeRegex.exec(code))) {\n        if (match[0].length >= fenceSize) {\n          fenceSize = match[0].length + 1;\n        }\n      }\n\n      var fence = repeat(fenceChar, fenceSize);\n\n      return (\n        \"\\n\\n\" +\n        fence +\n        language +\n        \"\\n\" +\n        code.replace(/\\n$/, \"\") +\n        \"\\n\" +\n        fence +\n        \"\\n\\n\"\n      );\n    },\n  };\n\n  rules.horizontalRule = {\n    filter: \"hr\",\n\n    replacement: function (content, node, options) {\n      return \"\\n\\n\" + options.hr + \"\\n\\n\";\n    },\n  };\n\n  rules.inlineLink = {\n    filter: function (node, options) {\n      return (\n        options.linkStyle === \"inlined\" &&\n        node.nodeName === \"A\" &&\n        node.getAttribute(\"href\")\n      );\n    },\n\n    replacement: function (content, node) {\n      var href = node.getAttribute(\"href\");\n      var title = cleanAttribute(node.getAttribute(\"title\"));\n      if (title) title = ' \"' + title + '\"';\n      return \"[\" + content + \"](\" + href + title + \")\";\n    },\n  };\n\n  rules.referenceLink = {\n    filter: function (node, options) {\n      return (\n        options.linkStyle === \"referenced\" &&\n        node.nodeName === \"A\" &&\n        node.getAttribute(\"href\")\n      );\n    },\n\n    replacement: function (content, node, options) {\n      var href = node.getAttribute(\"href\");\n      var title = cleanAttribute(node.getAttribute(\"title\"));\n      if (title) title = ' \"' + title + '\"';\n      var replacement;\n      var reference;\n\n      switch (options.linkReferenceStyle) {\n        case \"collapsed\":\n          replacement = \"[\" + content + \"][]\";\n          reference = \"[\" + content + \"]: \" + href + title;\n          break;\n        case \"shortcut\":\n          replacement = \"[\" + content + \"]\";\n          reference = \"[\" + content + \"]: \" + href + title;\n          break;\n        default:\n          var id = this.references.length + 1;\n          replacement = \"[\" + content + \"][\" + id + \"]\";\n          reference = \"[\" + id + \"]: \" + href + title;\n      }\n\n      this.references.push(reference);\n      return replacement;\n    },\n\n    references: [],\n\n    append: function (options) {\n      var references = \"\";\n      if (this.references.length) {\n        references = \"\\n\\n\" + this.references.join(\"\\n\") + \"\\n\\n\";\n        this.references = []; // Reset references\n      }\n      return references;\n    },\n  };\n\n  rules.emphasis = {\n    filter: [\"em\", \"i\"],\n\n    replacement: function (content, node, options) {\n      if (!content.trim()) return \"\";\n      return options.emDelimiter + content + options.emDelimiter;\n    },\n  };\n\n  rules.strong = {\n    filter: [\"strong\", \"b\"],\n\n    replacement: function (content, node, options) {\n      if (!content.trim()) return \"\";\n      return options.strongDelimiter + content + options.strongDelimiter;\n    },\n  };\n\n  rules.code = {\n    filter: function (node) {\n      var hasSiblings = node.previousSibling || node.nextSibling;\n      var isCodeBlock = node.parentNode.nodeName === \"PRE\" && !hasSiblings;\n\n      return node.nodeName === \"CODE\" && !isCodeBlock;\n    },\n\n    replacement: function (content) {\n      if (!content) return \"\";\n      content = content.replace(/\\r?\\n|\\r/g, \" \");\n\n      var extraSpace = /^`|^ .*?[^ ].* $|`$/.test(content) ? \" \" : \"\";\n      var delimiter = \"`\";\n      var matches = content.match(/`+/gm) || [];\n      while (matches.indexOf(delimiter) !== -1) delimiter = delimiter + \"`\";\n\n      return delimiter + extraSpace + content + extraSpace + delimiter;\n    },\n  };\n\n  rules.image = {\n    filter: \"img\",\n\n    replacement: function (content, node) {\n      var alt = cleanAttribute(node.getAttribute(\"alt\"));\n      var src = node.getAttribute(\"src\") || \"\";\n      var title = cleanAttribute(node.getAttribute(\"title\"));\n      var titlePart = title ? ' \"' + title + '\"' : \"\";\n      return src ? \"![\" + alt + \"]\" + \"(\" + src + titlePart + \")\" : \"\";\n    },\n  };\n\n  function cleanAttribute(attribute) {\n    return attribute ? attribute.replace(/(\\n+\\s*)+/g, \"\\n\") : \"\";\n  }\n\n  /**\n   * Manages a collection of rules used to convert HTML to Markdown\n   */\n\n  function Rules(options) {\n    this.options = options;\n    this._keep = [];\n    this._remove = [];\n\n    this.blankRule = {\n      replacement: options.blankReplacement,\n    };\n\n    this.keepReplacement = options.keepReplacement;\n\n    this.defaultRule = {\n      replacement: options.defaultReplacement,\n    };\n\n    this.array = [];\n    for (var key in options.rules) this.array.push(options.rules[key]);\n  }\n\n  Rules.prototype = {\n    add: function (key, rule) {\n      this.array.unshift(rule);\n    },\n\n    keep: function (filter) {\n      this._keep.unshift({\n        filter: filter,\n        replacement: this.keepReplacement,\n      });\n    },\n\n    remove: function (filter) {\n      this._remove.unshift({\n        filter: filter,\n        replacement: function () {\n          return \"\";\n        },\n      });\n    },\n\n    forNode: function (node) {\n      if (node.isBlank) return this.blankRule;\n      var rule;\n\n      if ((rule = findRule(this.array, node, this.options))) return rule;\n      if ((rule = findRule(this._keep, node, this.options))) return rule;\n      if ((rule = findRule(this._remove, node, this.options))) return rule;\n\n      return this.defaultRule;\n    },\n\n    forEach: function (fn) {\n      for (var i = 0; i < this.array.length; i++) fn(this.array[i], i);\n    },\n  };\n\n  function findRule(rules, node, options) {\n    for (var i = 0; i < rules.length; i++) {\n      var rule = rules[i];\n      if (filterValue(rule, node, options)) return rule;\n    }\n    return void 0;\n  }\n\n  function filterValue(rule, node, options) {\n    var filter = rule.filter;\n    if (typeof filter === \"string\") {\n      if (filter === node.nodeName.toLowerCase()) return true;\n    } else if (Array.isArray(filter)) {\n      if (filter.indexOf(node.nodeName.toLowerCase()) > -1) return true;\n    } else if (typeof filter === \"function\") {\n      if (filter.call(rule, node, options)) return true;\n    } else {\n      throw new TypeError(\"`filter` needs to be a string, array, or function\");\n    }\n  }\n\n  /**\n   * The collapseWhitespace function is adapted from collapse-whitespace\n   * by Luc Thevenard.\n   *\n   * The MIT License (MIT)\n   *\n   * Copyright (c) 2014 Luc Thevenard <lucthevenard@gmail.com>\n   *\n   * Permission is hereby granted, free of charge, to any person obtaining a copy\n   * of this software and associated documentation files (the \"Software\"), to deal\n   * in the Software without restriction, including without limitation the rights\n   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the Software is\n   * furnished to do so, subject to the following conditions:\n   *\n   * The above copyright notice and this permission notice shall be included in\n   * all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n   * THE SOFTWARE.\n   */\n\n  /**\n   * collapseWhitespace(options) removes extraneous whitespace from an the given element.\n   *\n   * @param {Object} options\n   */\n  function collapseWhitespace(options) {\n    var element = options.element;\n    var isBlock = options.isBlock;\n    var isVoid = options.isVoid;\n    var isPre =\n      options.isPre ||\n      function (node) {\n        return node.nodeName === \"PRE\";\n      };\n\n    if (!element.firstChild || isPre(element)) return;\n\n    var prevText = null;\n    var keepLeadingWs = false;\n\n    var prev = null;\n    var node = next(prev, element, isPre);\n\n    while (node !== element) {\n      if (node.nodeType === 3 || node.nodeType === 4) {\n        // Node.TEXT_NODE or Node.CDATA_SECTION_NODE\n        var text = node.data.replace(/[ \\r\\n\\t]+/g, \" \");\n\n        if (\n          (!prevText || / $/.test(prevText.data)) &&\n          !keepLeadingWs &&\n          text[0] === \" \"\n        ) {\n          text = text.substr(1);\n        }\n\n        // `text` might be empty at this point.\n        if (!text) {\n          node = remove(node);\n          continue;\n        }\n\n        node.data = text;\n\n        prevText = node;\n      } else if (node.nodeType === 1) {\n        // Node.ELEMENT_NODE\n        if (isBlock(node) || node.nodeName === \"BR\") {\n          if (prevText) {\n            prevText.data = prevText.data.replace(/ $/, \"\");\n          }\n\n          prevText = null;\n          keepLeadingWs = false;\n        } else if (isVoid(node) || isPre(node)) {\n          // Avoid trimming space around non-block, non-BR void elements and inline PRE.\n          prevText = null;\n          keepLeadingWs = true;\n        } else if (prevText) {\n          // Drop protection if set previously.\n          keepLeadingWs = false;\n        }\n      } else {\n        node = remove(node);\n        continue;\n      }\n\n      var nextNode = next(prev, node, isPre);\n      prev = node;\n      node = nextNode;\n    }\n\n    if (prevText) {\n      prevText.data = prevText.data.replace(/ $/, \"\");\n      if (!prevText.data) {\n        remove(prevText);\n      }\n    }\n  }\n\n  /**\n   * remove(node) removes the given node from the DOM and returns the\n   * next node in the sequence.\n   *\n   * @param {Node} node\n   * @return {Node} node\n   */\n  function remove(node) {\n    var next = node.nextSibling || node.parentNode;\n\n    node.parentNode.removeChild(node);\n\n    return next;\n  }\n\n  /**\n   * next(prev, current, isPre) returns the next node in the sequence, given the\n   * current and previous nodes.\n   *\n   * @param {Node} prev\n   * @param {Node} current\n   * @param {Function} isPre\n   * @return {Node}\n   */\n  function next(prev, current, isPre) {\n    if ((prev && prev.parentNode === current) || isPre(current)) {\n      return current.nextSibling || current.parentNode;\n    }\n\n    return current.firstChild || current.nextSibling || current.parentNode;\n  }\n\n  /*\n   * Set up window for Node.js\n   */\n\n  var root = typeof window !== \"undefined\" ? window : {};\n\n  /*\n   * Parsing HTML strings\n   */\n\n  function canParseHTMLNatively() {\n    var Parser = root.DOMParser;\n    var canParse = false;\n\n    // Adapted from https://gist.github.com/1129031\n    // Firefox/Opera/IE throw errors on unsupported types\n    try {\n      // WebKit returns null on unsupported types\n      if (new Parser().parseFromString(\"\", \"text/html\")) {\n        canParse = true;\n      }\n    } catch (e) {}\n\n    return canParse;\n  }\n\n  function createHTMLParser() {\n    var Parser = function () {};\n\n    {\n      if (shouldUseActiveX()) {\n        Parser.prototype.parseFromString = function (string) {\n          var doc = new window.ActiveXObject(\"htmlfile\");\n          doc.designMode = \"on\"; // disable on-page scripts\n          doc.open();\n          doc.write(string);\n          doc.close();\n          return doc;\n        };\n      } else {\n        Parser.prototype.parseFromString = function (string) {\n          var doc = document.implementation.createHTMLDocument(\"\");\n          doc.open();\n          doc.write(string);\n          doc.close();\n          return doc;\n        };\n      }\n    }\n    return Parser;\n  }\n\n  function shouldUseActiveX() {\n    var useActiveX = false;\n    try {\n      document.implementation.createHTMLDocument(\"\").open();\n    } catch (e) {\n      if (window.ActiveXObject) useActiveX = true;\n    }\n    return useActiveX;\n  }\n\n  var HTMLParser = canParseHTMLNatively() ? root.DOMParser : createHTMLParser();\n\n  function RootNode(input, options) {\n    var root;\n    if (typeof input === \"string\") {\n      var doc = htmlParser().parseFromString(\n        // DOM parsers arrange elements in the <head> and <body>.\n        // Wrapping in a custom element ensures elements are reliably arranged in\n        // a single element.\n        '<x-turndown id=\"turndown-root\">' + input + \"</x-turndown>\",\n        \"text/html\",\n      );\n      root = doc.getElementById(\"turndown-root\");\n    } else {\n      root = input.cloneNode(true);\n    }\n    collapseWhitespace({\n      element: root,\n      isBlock: isBlock,\n      isVoid: isVoid,\n      isPre: options.preformattedCode ? isPreOrCode : null,\n    });\n\n    return root;\n  }\n\n  var _htmlParser;\n  function htmlParser() {\n    _htmlParser = _htmlParser || new HTMLParser();\n    return _htmlParser;\n  }\n\n  function isPreOrCode(node) {\n    return node.nodeName === \"PRE\" || node.nodeName === \"CODE\";\n  }\n\n  function Node(node, options) {\n    node.isBlock = isBlock(node);\n    node.isCode = node.nodeName === \"CODE\" || node.parentNode.isCode;\n    node.isBlank = isBlank(node);\n    node.flankingWhitespace = flankingWhitespace(node, options);\n    return node;\n  }\n\n  function isBlank(node) {\n    return (\n      !isVoid(node) &&\n      !isMeaningfulWhenBlank(node) &&\n      /^\\s*$/i.test(node.textContent) &&\n      !hasVoid(node) &&\n      !hasMeaningfulWhenBlank(node)\n    );\n  }\n\n  function flankingWhitespace(node, options) {\n    if (node.isBlock || (options.preformattedCode && node.isCode)) {\n      return { leading: \"\", trailing: \"\" };\n    }\n\n    var edges = edgeWhitespace(node.textContent);\n\n    // abandon leading ASCII WS if left-flanked by ASCII WS\n    if (edges.leadingAscii && isFlankedByWhitespace(\"left\", node, options)) {\n      edges.leading = edges.leadingNonAscii;\n    }\n\n    // abandon trailing ASCII WS if right-flanked by ASCII WS\n    if (edges.trailingAscii && isFlankedByWhitespace(\"right\", node, options)) {\n      edges.trailing = edges.trailingNonAscii;\n    }\n\n    return { leading: edges.leading, trailing: edges.trailing };\n  }\n\n  function edgeWhitespace(string) {\n    var m = string.match(\n      /^(([ \\t\\r\\n]*)(\\s*))(?:(?=\\S)[\\s\\S]*\\S)?((\\s*?)([ \\t\\r\\n]*))$/,\n    );\n    return {\n      leading: m[1], // whole string for whitespace-only strings\n      leadingAscii: m[2],\n      leadingNonAscii: m[3],\n      trailing: m[4], // empty for whitespace-only strings\n      trailingNonAscii: m[5],\n      trailingAscii: m[6],\n    };\n  }\n\n  function isFlankedByWhitespace(side, node, options) {\n    var sibling;\n    var regExp;\n    var isFlanked;\n\n    if (side === \"left\") {\n      sibling = node.previousSibling;\n      regExp = / $/;\n    } else {\n      sibling = node.nextSibling;\n      regExp = /^ /;\n    }\n\n    if (sibling) {\n      if (sibling.nodeType === 3) {\n        isFlanked = regExp.test(sibling.nodeValue);\n      } else if (options.preformattedCode && sibling.nodeName === \"CODE\") {\n        isFlanked = false;\n      } else if (sibling.nodeType === 1 && !isBlock(sibling)) {\n        isFlanked = regExp.test(sibling.textContent);\n      }\n    }\n    return isFlanked;\n  }\n\n  var reduce = Array.prototype.reduce;\n  var escapes = [\n    [/\\\\/g, \"\\\\\\\\\"],\n    [/\\*/g, \"\\\\*\"],\n    [/^-/g, \"\\\\-\"],\n    [/^\\+ /g, \"\\\\+ \"],\n    [/^(=+)/g, \"\\\\$1\"],\n    [/^(#{1,6}) /g, \"\\\\$1 \"],\n    [/`/g, \"\\\\`\"],\n    [/^~~~/g, \"\\\\~~~\"],\n    [/\\[/g, \"\\\\[\"],\n    [/\\]/g, \"\\\\]\"],\n    [/^>/g, \"\\\\>\"],\n    [/_/g, \"\\\\_\"],\n    [/^(\\d+)\\. /g, \"$1\\\\. \"],\n  ];\n\n  function TurndownService(options) {\n    if (!(this instanceof TurndownService)) return new TurndownService(options);\n\n    var defaults = {\n      rules: rules,\n      headingStyle: \"setext\",\n      hr: \"* * *\",\n      bulletListMarker: \"*\",\n      codeBlockStyle: \"indented\",\n      fence: \"```\",\n      emDelimiter: \"_\",\n      strongDelimiter: \"**\",\n      linkStyle: \"inlined\",\n      linkReferenceStyle: \"full\",\n      br: \"  \",\n      preformattedCode: false,\n      blankReplacement: function (content, node) {\n        return node.isBlock ? \"\\n\\n\" : \"\";\n      },\n      keepReplacement: function (content, node) {\n        return node.isBlock ? \"\\n\\n\" + node.outerHTML + \"\\n\\n\" : node.outerHTML;\n      },\n      defaultReplacement: function (content, node) {\n        return node.isBlock ? \"\\n\\n\" + content + \"\\n\\n\" : content;\n      },\n    };\n    this.options = extend({}, defaults, options);\n    this.rules = new Rules(this.options);\n  }\n\n  TurndownService.prototype = {\n    /**\n     * The entry point for converting a string or DOM node to Markdown\n     * @public\n     * @param {String|HTMLElement} input The string or DOM node to convert\n     * @returns A Markdown representation of the input\n     * @type String\n     */\n\n    turndown: function (input) {\n      if (!canConvert(input)) {\n        throw new TypeError(\n          input + \" is not a string, or an element/document/fragment node.\",\n        );\n      }\n\n      if (input === \"\") return \"\";\n\n      var output = process.call(this, new RootNode(input, this.options));\n      return postProcess.call(this, output);\n    },\n\n    /**\n     * Add one or more plugins\n     * @public\n     * @param {Function|Array} plugin The plugin or array of plugins to add\n     * @returns The Turndown instance for chaining\n     * @type Object\n     */\n\n    use: function (plugin) {\n      if (Array.isArray(plugin)) {\n        for (var i = 0; i < plugin.length; i++) this.use(plugin[i]);\n      } else if (typeof plugin === \"function\") {\n        plugin(this);\n      } else {\n        throw new TypeError(\n          \"plugin must be a Function or an Array of Functions\",\n        );\n      }\n      return this;\n    },\n\n    /**\n     * Adds a rule\n     * @public\n     * @param {String} key The unique key of the rule\n     * @param {Object} rule The rule\n     * @returns The Turndown instance for chaining\n     * @type Object\n     */\n\n    addRule: function (key, rule) {\n      this.rules.add(key, rule);\n      return this;\n    },\n\n    /**\n     * Keep a node (as HTML) that matches the filter\n     * @public\n     * @param {String|Array|Function} filter The unique key of the rule\n     * @returns The Turndown instance for chaining\n     * @type Object\n     */\n\n    keep: function (filter) {\n      this.rules.keep(filter);\n      return this;\n    },\n\n    /**\n     * Remove a node that matches the filter\n     * @public\n     * @param {String|Array|Function} filter The unique key of the rule\n     * @returns The Turndown instance for chaining\n     * @type Object\n     */\n\n    remove: function (filter) {\n      this.rules.remove(filter);\n      return this;\n    },\n\n    /**\n     * Escapes Markdown syntax\n     * @public\n     * @param {String} string The string to escape\n     * @returns A string with Markdown syntax escaped\n     * @type String\n     */\n\n    escape: function (string) {\n      return escapes.reduce(function (accumulator, escape) {\n        return accumulator.replace(escape[0], escape[1]);\n      }, string);\n    },\n  };\n\n  /**\n   * Reduces a DOM node down to its Markdown string equivalent\n   * @private\n   * @param {HTMLElement} parentNode The node to convert\n   * @returns A Markdown representation of the node\n   * @type String\n   */\n\n  function process(parentNode) {\n    var self = this;\n    return reduce.call(\n      parentNode.childNodes,\n      function (output, node) {\n        node = new Node(node, self.options);\n\n        var replacement = \"\";\n        if (node.nodeType === 3) {\n          replacement = node.isCode\n            ? node.nodeValue\n            : self.escape(node.nodeValue);\n        } else if (node.nodeType === 1) {\n          replacement = replacementForNode.call(self, node);\n        }\n\n        return join(output, replacement);\n      },\n      \"\",\n    );\n  }\n\n  /**\n   * Appends strings as each rule requires and trims the output\n   * @private\n   * @param {String} output The conversion output\n   * @returns A trimmed version of the ouput\n   * @type String\n   */\n\n  function postProcess(output) {\n    var self = this;\n    this.rules.forEach(function (rule) {\n      if (typeof rule.append === \"function\") {\n        output = join(output, rule.append(self.options));\n      }\n    });\n\n    return output.replace(/^[\\t\\r\\n]+/, \"\").replace(/[\\t\\r\\n\\s]+$/, \"\");\n  }\n\n  /**\n   * Converts an element node to its Markdown equivalent\n   * @private\n   * @param {HTMLElement} node The node to convert\n   * @returns A Markdown representation of the node\n   * @type String\n   */\n\n  function replacementForNode(node) {\n    var rule = this.rules.forNode(node);\n    var content = process.call(this, node);\n    var whitespace = node.flankingWhitespace;\n    if (whitespace.leading || whitespace.trailing) content = content.trim();\n    return (\n      whitespace.leading +\n      rule.replacement(content, node, this.options) +\n      whitespace.trailing\n    );\n  }\n\n  /**\n   * Joins replacement to the current output with appropriate number of new lines\n   * @private\n   * @param {String} output The current conversion output\n   * @param {String} replacement The string to append to the output\n   * @returns Joined output\n   * @type String\n   */\n\n  function join(output, replacement) {\n    var s1 = trimTrailingNewlines(output);\n    var s2 = trimLeadingNewlines(replacement);\n    var nls = Math.max(\n      output.length - s1.length,\n      replacement.length - s2.length,\n    );\n    var separator = \"\\n\\n\".substring(0, nls);\n\n    return s1 + separator + s2;\n  }\n\n  /**\n   * Determines whether an input can be converted\n   * @private\n   * @param {String|HTMLElement} input Describe this parameter\n   * @returns Describe what it returns\n   * @type String|Object|Array|Boolean|Number\n   */\n\n  function canConvert(input) {\n    return (\n      input != null &&\n      (typeof input === \"string\" ||\n        (input.nodeType &&\n          (input.nodeType === 1 ||\n            input.nodeType === 9 ||\n            input.nodeType === 11)))\n    );\n  }\n\n  return TurndownService;\n})();\n","let PDFJS: any;\nlet PDFJSWorker: any;\n\nasync function loadPdfJsLib() {\n  if (!PDFJS) {\n    PDFJS = await import('pdfjs-dist/build/pdf.mjs');\n    PDFJSWorker = await import('pdfjs-dist/build/pdf.worker.mjs');\n  }\n  return { PDFJS, PDFJSWorker };\n}\nimport { Logger } from \"../logger/logger\";\nexport function extractTextFromPDF(pdfUrl: string): Promise<string> {\n  return new Promise(async (resolve, reject) => {\n    const { PDFJS, PDFJSWorker } = await loadPdfJsLib();\n    PDFJS.GlobalWorkerOptions.workerSrc = PDFJSWorker;\n    PDFJS.getDocument(pdfUrl)\n        .promise.then(function (pdf: any) {\n      const textArray: string[] = [];\n      function processPage(pageNum: number) {\n        if (pageNum > pdf.numPages) {\n          let stringToResolve = \"# Page 1\\n\" + textArray[0] + \"\\n\";\n          for (let i = 1; i < textArray.length; i++) {\n            stringToResolve +=\n                \"# Page \" + (i + 1) + \"\\n\" + textArray[i] + \"\\n\";\n          }\n          resolve(stringToResolve);\n          return;\n        }\n        pdf\n            .getPage(pageNum)\n            .then(function (page: any) {\n              return page.getTextContent();\n            })\n            .then(function (textContent: { items: { str: string }[] }) {\n              textArray.push(\n                  textContent.items.map((item) => item.str).join(\" \"),\n              );\n              processPage(pageNum + 1);\n            })\n            .catch(function (error: any) {\n              Logger.log(\"[extractTextFromPDF] : Error \" + error);\n              resolve(\"\");\n            });\n      }\n      processPage(1);\n    })\n        .catch(reject);\n  });\n}\n","import { isPdfEmbedElementPresent } from \"./check-pdf\";\nimport {\n  get_document_html,\n  removeElementsByClassNames,\n  removeImagesDOM,\n  removeSelectorsFromDocument,\n} from \"./dom-processing\";\nimport { saveCrawl } from \"./save-crawl\";\nimport { TurndownService } from \"../turndown/turndown\";\nimport { extractTextFromPDF } from \"../pdf/pdf-getter\";\nimport { Logger } from \"../logger/logger\";\nexport async function initCrawl(event: MessageEvent, shouldDispatch: boolean) {\n  window.addEventListener(\"message\", async function (event) {\n    let isMellowtelCrawl = event.data.isMellowtelCrawl;\n    if (isMellowtelCrawl) {\n      let recordID = event.data.recordID;\n      let removeCSSselectors = event.data.removeCSSselectors;\n      let classNamesToBeRemoved = event.data.classNamesToBeRemoved;\n      let fastLane = event.data.hasOwnProperty(\"fastLane\")\n        ? event.data.fastLane\n        : false;\n      let url_to_crawl = event.data.hasOwnProperty(\"url_to_crawl\")\n        ? event.data.url_to_crawl\n        : \"\";\n      let htmlTransformer = event.data.hasOwnProperty(\"htmlTransformer\")\n        ? event.data.htmlTransformer\n        : \"none\";\n      let removeImages = event.data.hasOwnProperty(\"removeImages\")\n        ? event.data.removeImages.toString().toLowerCase() === \"true\"\n        : false;\n\n      /** TECHCRUNCH SUPPORT */\n      let shouldContinueAfterConsent = true;\n      if (window.location.host === \"consent.yahoo.com\") {\n        setTimeout(() => {\n          let agree = document.getElementsByName(\"agree\")[0];\n          if (agree) {\n            shouldContinueAfterConsent = false;\n            agree.click();\n          }\n        }, 0);\n      }\n      if (!shouldContinueAfterConsent) return;\n      /** TECHCRUNCH SUPPORT */\n\n      let waitBeforeScraping = parseInt(event.data.waitBeforeScraping);\n      Logger.log(\"[initCrawl]: waitBeforeScraping \" + waitBeforeScraping);\n      setTimeout(async () => {\n        let host_window = window.location.host;\n        let document_to_use = document;\n        let url_check_pdf = window.location.href;\n        let isPDF = url_check_pdf.includes(\"?\")\n          ? url_check_pdf.split(\"?\")[0].endsWith(\".pdf\")\n          : url_check_pdf.endsWith(\".pdf\");\n        if (!isPDF) isPDF = isPdfEmbedElementPresent();\n        let orgId = event.data.hasOwnProperty(\"orgId\") ? event.data.orgId : \"\";\n        let saveText = event.data.hasOwnProperty(\"saveText\")\n          ? event.data.saveText\n          : false;\n\n        if (host_window === \"www.reuters.com\") {\n          let response = await fetch(window.location.href);\n          let html = await response.text();\n          let parser = new DOMParser();\n          document_to_use = parser.parseFromString(html, \"text/html\");\n        }\n\n        if (removeCSSselectors === \"default\")\n          removeSelectorsFromDocument(document_to_use);\n        if (classNamesToBeRemoved.length > 0)\n          removeElementsByClassNames(classNamesToBeRemoved);\n        if (removeImages) removeImagesDOM(document_to_use);\n\n        let doc_string = get_document_html(\"\\n\", document_to_use);\n        doc_string = doc_string\n          .replace(/(\\r\\n|\\n|\\r)/gm, \"\")\n          .replace(/\\\\t/gm, \"\");\n\n        Logger.log(\"[🌐] : Sending data to server...\");\n        Logger.log(\"[🌐] : recordID => \" + recordID);\n        let markDown;\n        if (!isPDF) {\n          let turnDownService = new (TurndownService as any)({});\n          markDown = turnDownService.turndown(\n            document_to_use.documentElement.outerHTML,\n          );\n          Logger.log(\"[🌐] : markDown => \" + markDown);\n\n          saveCrawl(\n            recordID,\n            doc_string,\n            markDown,\n            fastLane,\n            url_to_crawl,\n            htmlTransformer,\n            orgId,\n            saveText,\n          );\n        } else {\n          Logger.log(\"[initCrawl 🌐] : it's a PDF\");\n          let text: string = await extractTextFromPDF(url_to_crawl);\n          Logger.log(\"[initCrawl 🌐] : text => \" + text);\n          saveCrawl(\n            recordID,\n            text,\n            text,\n            fastLane,\n            url_to_crawl,\n            htmlTransformer,\n            orgId,\n            saveText,\n          );\n        }\n      }, waitBeforeScraping);\n    }\n  });\n  if (shouldDispatch) {\n    window.dispatchEvent(\n      new MessageEvent(\"message\", {\n        data: event.data,\n      }),\n    );\n  }\n}\n","export function muteIframe(): void {\n  // For iframes, we don't want to play any audio or video\n  // Mute and pause all existing video and audio elements\n  const videos: HTMLCollectionOf<HTMLVideoElement> =\n    document.getElementsByTagName(\"video\");\n  const audios: HTMLCollectionOf<HTMLAudioElement> =\n    document.getElementsByTagName(\"audio\");\n\n  for (let i = 0; i < videos.length; i++) {\n    videos[i].muted = true;\n    videos[i].pause();\n  }\n\n  for (let i = 0; i < audios.length; i++) {\n    audios[i].muted = true;\n    audios[i].pause();\n  }\n\n  new MutationObserver((mutationsList, _observer) => {\n    // Iterate over all mutations that just occurred\n    for (const mutation of mutationsList) {\n      // If the addedNodes property has one or more nodes\n      for (let i = 0; i < mutation.addedNodes.length; i++) {\n        const addedNode = mutation.addedNodes[i];\n        // Check if the added node is an Element and if it's a video or audio element\n        if (\n          addedNode instanceof Element &&\n          (addedNode.tagName === \"VIDEO\" || addedNode.tagName === \"AUDIO\")\n        ) {\n          // If so, mute and pause the media element\n          (addedNode as HTMLMediaElement).muted = true;\n          (addedNode as HTMLMediaElement).pause();\n        }\n      }\n    }\n  }).observe(document, { childList: true, subtree: true });\n}\n","import { Logger } from \"../logger/logger\";\nexport function safeRenderIframe(): boolean {\n  try {\n    // Override the alert, prompt and confirm functions\n    window.alert = function () {};\n    window.prompt = function () {\n      return null;\n    };\n    window.confirm = function () {\n      return false;\n    };\n    return true;\n  } catch (e) {\n    Logger.log(\"Error in safeRenderIframe => \" + e);\n    return false;\n  }\n}\n","import { inIframe } from \"../utils/iframe-helpers\";\nimport {\n  DynamicSelector,\n  getSelectorInfo,\n  waitForElementDynamicSelector,\n} from \"./evaluate-selector\";\nimport { Logger } from \"../logger/logger\";\nimport { initCrawl } from \"./init-crawl\";\nimport { muteIframe } from \"./mute-iframe\";\nimport { executeFunctionIfOrWhenBodyExists } from \"../utils/document-body-observer\";\nimport { safeRenderIframe } from \"./safe-render\";\n\nlet alreadyReplied: boolean = false;\n\nexport function attachMutationObserver() {\n  executeFunctionIfOrWhenBodyExists(() => {\n    initIframeListeners();\n  });\n}\n\nfunction initIframeListeners() {\n  if (inIframe()) {\n    muteIframe();\n    safeRenderIframe();\n    window.addEventListener(\"message\", initialEventListener);\n  }\n}\n\nasync function initialEventListener(event: MessageEvent) {\n  let isMellowtelCrawl = event.data.isMellowtelCrawl;\n  if (isMellowtelCrawl && !alreadyReplied) {\n    window.parent.postMessage({ isMellowtelReply: true }, \"*\");\n    alreadyReplied = true;\n    let waitForElement = event.data.hasOwnProperty(\"waitForElement\")\n      ? event.data.waitForElement\n      : \"none\";\n    let waitForElementTime = event.data.hasOwnProperty(\"waitForElementTime\")\n      ? parseInt(event.data.waitForElementTime)\n      : 0;\n    window.removeEventListener(\"message\", initialEventListener);\n\n    if (waitForElement === \"none\") {\n      Logger.log('waitForElement === \"none\"');\n      await initCrawl(event, true);\n    } else {\n      let safeEvalSelector = getSelectorInfo(waitForElement);\n      Logger.log(\n        \"[initialEventListener] : safeEvalSelector => \",\n        safeEvalSelector,\n      );\n      if (!safeEvalSelector) return;\n      waitForElementDynamicSelector(\n        safeEvalSelector.dSelectorToUse as DynamicSelector,\n        safeEvalSelector.selectorId,\n        safeEvalSelector.index,\n        80000,\n      )\n        .then(() => {\n          setTimeout(async () => {\n            await initCrawl(event, true);\n          }, waitForElementTime * 1000);\n        })\n        .catch(() => {\n          Logger.log(\"[DOM_getter] : waitForElement_ELEMENT => catch\");\n        });\n    }\n  }\n}\n","import { getOrGenerateIdentifier } from \"./utils/identity-helpers\";\nimport { setUpOnTabRemoveListeners } from \"./background-script/tab-remove-listeners\";\nimport { setUpBackgroundListeners } from \"./utils/listener-helpers\";\nimport { inIframe } from \"./utils/iframe-helpers\";\nimport { purgeOnStartup } from \"./background-script/purge-on-startup\";\nimport { setUpStorageChangeListeners } from \"./content-script/storage-change-listeners\";\nimport { setLocalStorage } from \"./utils/storage-helpers\";\nimport {\n  isMellowtelStarted,\n  startMellowtelWebsocket,\n} from \"./utils/start-stop-helpers\";\nimport { getOptInStatus } from \"./utils/opt-in-out-helpers\";\nimport { Logger } from \"./logger/logger\";\n\nexport default class Mellowtel {\n  private publishableKey: string;\n  private options?: any;\n  private disableLogs: boolean = true;\n\n  constructor(publishableKey: string, options?: any) {\n    this.publishableKey = publishableKey;\n    this.options = options;\n    this.disableLogs = options?.disableLogs !== undefined ? options.disableLogs : true;\n    Logger.disableLogs = this.disableLogs;\n  }\n\n  public async initBackground(\n    auto_start_if_opted_in?: boolean | undefined,\n    metadata_id?: string | undefined,\n  ): Promise<void> {\n    if (\n      typeof this.publishableKey === \"undefined\" ||\n      this.publishableKey === null ||\n      this.publishableKey === \"\"\n    ) {\n      throw new Error(\"publishableKey is undefined, null, or empty\");\n    }\n    await purgeOnStartup();\n    await setUpOnTabRemoveListeners();\n    await setUpBackgroundListeners();\n    await getOrGenerateIdentifier(this.publishableKey);\n    if (auto_start_if_opted_in === undefined || auto_start_if_opted_in) {\n      let optInStatus = await getOptInStatus();\n      if (optInStatus) {\n        await this.start(metadata_id);\n      }\n    }\n  }\n\n  public async initContentScript(): Promise<void> {\n    if (typeof window !== \"undefined\") {\n      if (inIframe()) {\n        const mutationObserverModule = await import(\n          \"./iframe/mutation-observer\"\n        );\n        mutationObserverModule.attachMutationObserver();\n      } else {\n        if (await isMellowtelStarted()) {\n          startMellowtelWebsocket();\n        } else {\n          await setUpStorageChangeListeners();\n        }\n      }\n    }\n  }\n\n  public async optIn(): Promise<boolean> {\n    return new Promise((resolve) => {\n      setLocalStorage(\"mellowtelOptIn\", \"true\").then(() => {\n        resolve(true);\n      });\n    });\n  }\n\n  public async optOut(): Promise<boolean> {\n    return new Promise((resolve) => {\n      setLocalStorage(\"mellowtelOptIn\", \"false\").then(() => {\n        this.stop();\n        resolve(true);\n      });\n    });\n  }\n\n  public async getOptInStatus(): Promise<boolean> {\n    return getOptInStatus();\n  }\n\n  public async start(metadata_id?: string | undefined): Promise<boolean> {\n    return new Promise(async (resolve) => {\n      let optInStatus = await getOptInStatus();\n      if (!optInStatus) {\n        throw new Error(\n          \"Node has not opted in to Mellowtel yet. Request a disclaimer to the end-user and then call the optIn() method if they agree to join the Mellowtel network.\",\n        );\n      }\n      // note: in later version, metadata_id will be used to trace the #...\n      // ...of requests to this specific node, so you can give rewards, etc.\n      setLocalStorage(\"mellowtelStatus\", \"start\").then(() => {\n        resolve(true);\n      });\n    });\n  }\n\n  public async stop(): Promise<boolean> {\n    return new Promise((resolve) => {\n      setLocalStorage(\"mellowtelStatus\", \"stop\").then(() => {\n        resolve(true);\n      });\n    });\n  }\n}\n","import { sendMessageToContentScript } from \"../utils/messaging-helpers\";\n\nexport async function setUpOnTabRemoveListeners(): Promise<void> {\n  chrome.tabs.onRemoved.addListener(function (\n      tabId: number,\n      removeInfo: chrome.tabs.TabRemoveInfo,\n  ) {\n    chrome.storage.local.get(\n        [\"webSocketConnectedMellowtel\"],\n        function (result: { [key: string]: any }) {\n          let webSocketConnected = result[\"webSocketConnectedMellowtel\"];\n          if (webSocketConnected === tabId) {\n            let sentMessage: boolean = false;\n            chrome.tabs.query({}, async function(tabs: chrome.tabs.Tab[]) {\n              for (let i: number = 0; i < tabs.length; i++) {\n                if (!tabs[i]?.url?.includes(\"chrome://\") && !sentMessage) {\n                  await sendMessageToContentScript(tabs[i].id!, {\n                    intent: \"startConnectionMellowtel\",\n                  }).then(function(): void {\n                    sentMessage = true;\n                  });\n                }\n              }\n            });\n          }\n        },\n    );\n  });\n}\n","import { deleteLocalStorage } from \"../utils/storage-helpers\";\n\nexport async function purgeOnStartup(): Promise<void> {\n  chrome.runtime.onStartup.addListener(async function () {\n    const keysToPurge: string[] = [\"webSocketConnectedMellowtel\"];\n    await deleteLocalStorage(keysToPurge);\n  });\n}\n","import {\n  startMellowtelWebsocket,\n  stopMellowtelConnection,\n} from \"../utils/start-stop-helpers\";\nimport { Logger } from \"../logger/logger\";\n\nexport async function setUpStorageChangeListeners(): Promise<void> {\n  return new Promise((resolve) => {\n    chrome.storage.onChanged.addListener(function (changes, namespace) {\n      for (let key in changes) {\n        if (key === \"mellowtelStatus\") {\n          let newValue = changes[key].newValue;\n          if (newValue === \"start\") {\n            Logger.info(\"Mellowtel is starting...\");\n            startMellowtelWebsocket();\n          } else if (newValue === \"stop\") {\n            Logger.info(\"Mellowtel is stopping...\");\n            stopMellowtelConnection();\n          }\n        }\n      }\n    });\n  });\n}\n","export async function getOptInStatus(): Promise<boolean> {\n  return new Promise((resolve) => {\n    chrome.storage.local.get(\"mellowtelOptIn\", function (result) {\n      if (result !== undefined && result[\"mellowtelOptIn\"] === \"true\") {\n        resolve(true);\n      } else {\n        resolve(false);\n      }\n    });\n  });\n}\n"],"mappings":"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","names":["document","rules","isBlock","isVoid","node","next","root","Node","TurndownService","PDFJS","PDFJSWorker","event"]}